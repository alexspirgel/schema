/*!
 * Schema v1.0.0
 * https://github.com/alexspirgel/schema
 */
var Schema=function(e){var t={};function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}return a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=2)}([function(e,t){e.exports=class DataPathManager{constructor(e,t=[]){this.data=e,this.path=t}set path(e){if(!Array.isArray(e))throw new Error("Path must be an array");this._path=e}get path(){return this._path}addPathSegment(e){this.path.push(e)}removePathSegment(){return this.path.splice(-1,1)[0]}get value(){let e=this.data;for(let t of this.path)try{e=e[t]}catch(e){return}return e}clone(){return new this.constructor(this.data,[...this.path])}}},function(e,t,a){const r=a(0);class ValidationError extends Error{constructor(...e){super(...e)}set modelPathManager(e){e instanceof r||(e=new r(e)),this._modelPathManager=e}get modelPathManager(){return this._modelPathManager}set inputPathManager(e){e instanceof r||(e=new r(e)),this._inputPathManager=e}get inputPathManager(){return this._inputPathManager}}e.exports=ValidationError},function(e,t,a){const r=a(0),n=a(1),i=a(3);class Schema{static get validationMethods(){return[{property:"required",method:this.validateRequired},{property:"type",method:this.validateType},{property:"exactValue",method:this.validateExactValue},{property:"greaterThan",method:this.validateGreaterThan},{property:"greaterThanOrEqualTo",method:this.validateGreaterThanOrEqualTo},{property:"lessThan",method:this.validateLessThan},{property:"lessThanOrEqualTo",method:this.validateLessThanOrEqualTo},{property:"divisibleBy",method:this.validateDivisibleBy},{property:"notDivisibleBy",method:this.validateNotDivisibleBy},{property:"minimumCharacters",method:this.validateMinimumCharacters},{property:"maximumCharacters",method:this.validateMaximumCharacters},{property:"minimumLength",method:this.validateMinimumLength},{property:"maximumLength",method:this.validateMaximumLength},{property:"instanceOf",method:this.validateInstanceOf},{property:"custom",method:this.validateCustom},{property:"itemSchema",method:this.validateItemSchema},{property:"propertySchema",method:this.validatePropertySchema}]}static validateRequired(e,t){if(!0===e.value&&(void 0===t.value||null===t.value))throw new n("Property 'required' validation failed. The input must not be null or undefined.");return!0}static validateType(e,t){if("number"===e.value){if("number"==typeof t.value&&!isNaN(t.value))return!0}else if("object"===e.value){if("object"==typeof t.value&&!Array.isArray(t.value)&&null!==t.value)return!0}else if("array"===e.value){if(Array.isArray(t.value))return!0}else if(("boolean"===e.value||"string"===e.value||"function"===e.value)&&typeof t.value===e.value)return!0;throw new n("Property 'type' validation failed. The input type must match.")}static validateExactValue(e,t){if(Array.isArray(e.value)){for(const a of e.value)if(t.value===a)return!0}else if(t.value===e.value)return!0;throw new n("Property 'exactValue' validation failed. The input must be an exact match of the value or one of the values in an array of values.")}static validateGreaterThan(e,t){if(t.value>e.value)return!0;throw new n("Property 'greaterThan' validation failed. The input must be greater than the value.")}static validateGreaterThanOrEqualTo(e,t){if(t.value>=e.value)return!0;throw new n("Property 'greaterThanOrEqualTo' validation failed. The input must be greater than or equal to the value.")}static validateLessThan(e,t){if(t.value<e.value)return!0;throw new n("Property 'lessThan' validation failed. The input must be less than the value.")}static validateLessThanOrEqualTo(e,t){if(t.value<=e.value)return!0;throw new n("Property 'lessThanOrEqualTo' validation failed. The input must be less than or equal to the value.")}static validateDivisibleBy(e,t){if(Array.isArray(e.value)){for(const a of e.value)if(t.value%a==0)return!0}else if(t.value%e.value==0)return!0;throw new n("Property 'divisibleBy' validation failed. The input must be divisible by the value or one of the values in an array of values.")}static validateNotDivisibleBy(e,t){let a=!1;if(Array.isArray(e.value))for(const r of e.value)t.value%r==0&&(a=!0);else t.value%e.value==0&&(a=!0);if(a||isNaN(t.value))throw new n("Property 'notDivisibleBy' validation failed. The input must not be divisible by the value or one of the values in an array of values.");return!0}static validateMinimumCharacters(e,t){if(t.value.length>=e.value)return!0;throw new n("Property 'minimumCharacters' validation failed. The input must have a character count greater than or equal to the value.")}static validateMaximumCharacters(e,t){if(t.value.length<=e.value)return!0;throw new n("Property 'maximumCharacters' validation failed. The input must have a character count less than or equal to the value.")}static validateMinimumLength(e,t){if(t.value.length>=e.value)return!0;throw new n("Property 'minimumLength' validation failed. The input must have a length greater than or equal to the value.")}static validateMaximumLength(e,t){if(t.value.length<=e.value)return!0;throw new n("Property 'maximumLength' validation failed. The input must have a length less than or equal to the value.")}static validateInstanceOf(e,t){if(Array.isArray(e.value)){for(const a of e.value)if(t.value instanceof a)return!0}else if(t.value instanceof e.value)return!0;throw new n("Property 'instanceOf' validation failed. The input must be an instance of the value or one of the values in an array of values.")}static validateCustom(e,t){const a=t.clone();return e.value(a)}static validateItemSchema(e,t){const a=new Schema(e.clone());for(let e=0;e<t.value.length;e++){const r=t.clone();r.addPathSegment(e);const n=a.validate(r,"array");if(!0!==n)return n}return!0}static validatePropertySchema(e,t){for(const a in e.value){const r=e.clone();r.addPathSegment(a);const n=new Schema(r),i=t.clone();i.addPathSegment(a);const o=n.validate(i,"array");if(!0!==o)return o}return!0}constructor(e={}){this.modelPathManager=e}set modelPathManager(e){e instanceof r||(e=new r(e)),this._modelPathManager=e}get modelPathManager(){return this._modelPathManager}validate(e,t="throw"){e instanceof r||(e=new r(e));let a=new i;if(Array.isArray(this.modelPathManager.value))for(let t=0;t<this.modelPathManager.value.length;t++){const r=this.modelPathManager.clone();r.addPathSegment(t);const n=this._validate(r,e);if(!0===n)return!0;a.addError(n)}else{const t=this._validate(this.modelPathManager,e);if(!0===t)return!0;a.addError(t)}if("throw"===t)throw new Error(a.generateFormattedMessage());return"array"===t?a.errors:"boolean"!==t&&void 0}_validate(e,t){if(!0!==e.value.required&&(void 0===t.value||null===t.value))return!0;for(const a of this.constructor.validationMethods)if(e.value.hasOwnProperty(a.property)){const r=e.clone();r.addPathSegment(a.property);try{const e=a.method(r,t);if(!0!==e)return e}catch(e){if(e instanceof n)return e.modelPathManager||(e.modelPathManager=r),e.inputPathManager||(e.inputPathManager=t),e;throw e}}return!0}}Schema.ValidationError=n,e.exports=Schema},function(e,t,a){const r=a(1);e.exports=class ValidationErrors{constructor(){this.errors=[]}addError(e){if(Array.isArray(e))for(const t of e)this.addError(t);else{if(!(e instanceof r))throw new Error("Passed 'error' must be an instance of 'Schema.ValidationError'.");this.errors.push(e)}}generateFormattedMessage(){let e="Schema Errors:\n";for(const t of this.errors){let a="root";t.inputPathManager.path.length>0&&(a=t.inputPathManager.path.map(e=>"['"+e+"']"),a=a.join(""));let r="root";t.modelPathManager.path.length>0&&(r=t.modelPathManager.path.map(e=>"['"+e+"']"),r=r.join("")),e+=`\nInput Path: ${a}\nModel Path: ${r}\nMessage: ${t.message}\n`}return e}}}]);